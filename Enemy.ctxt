#BlueJ class context
comment0.target=Enemy
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Enemy\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=Enemy()
comment1.text=\r\n\ When\ objects\ of\ the\ Enemy\ class\ or\ a\ subclass\ of\ Enemy\ is\ created,\r\n\ this\ method\ is\ called.\r\n
comment2.params=
comment2.target=void\ started()
comment2.text=\r\n\ started\ ensures\ that\ the\ Enemy\ instance\ variables\ are\ the\ correct\r\n\ value\ when\ the\ program\ is\ initialized.\r\n\ \r\n\ @param\ There\ are\ no\ parameters.\r\n\ @return\ Nothing\ is\ returned.\r\n\ \r\n\ This\ method\ is\ public\ because\ it\ must\ be\ called\ by\ the\ MyWorld\ class\ when\ the\ \r\n\ World\ is\ being\ created.\r\n\ This\ method\ is\ static\ because\ it\ references\ and\ alters\ static\ variables.\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ Enemy\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment4.params=
comment4.target=void\ checkCollision()
comment4.text=\r\n\ checkCollision\ checks\ if\ this\ object\ has\ reached\ the\ edge\ of\ the\ world,\r\n\ and\ changes\ the\ direction\ the\ Enemy\ objects\ move\ and\ moves\ them\ down.\r\n\ It\ also\ checks\ if\ this\ object\ is\ touching\ a\ Shot\ object,\ and\ removes\ this\ object\r\n\ and\ the\ Shot\ object,\ and\ calculates\ how\ many\ Enemy\ objects\ are\ left.\r\n\ \r\n\ @param\ There\ are\ no\ parameters.\r\n\ @return\ Nothing\ is\ returned.\r\n\ \r\n\ This\ method\ is\ private\ instead\ of\ protected\ because\ this\ code\ is\ used\ by\ the\ subclasses\ of\r\n\ the\ Enemy\ class\ directly,\ instead\ of\ being\ called\ from\ within\ the\ subclasses.\r\n
comment5.params=
comment5.target=void\ movement()
comment5.text=\r\n\ movement\ controls\ the\ horizontal\ movement\ of\ the\ Enemy\ objects,\r\n\ the\ speed\ of\ movement\ is\ determined\ by\ how\ many\ Enemy\ objects\ exist\ in\ the\ world.\r\n\ \r\n\ @param\ There\ are\ no\ parameters.\r\n\ @return\ Nothing\ is\ returned.\r\n\ \r\n\ This\ method\ is\ private\ instead\ of\ protected\ because\ this\ code\ is\ used\ by\ the\ subclasses\ of\r\n\ the\ Enemy\ class\ directly,\ instead\ of\ being\ called\ from\ within\ the\ subclasses.\r\n
comment6.params=
comment6.target=void\ moveDown()
comment6.text=\r\n\ moveDown\ moves\ every\ Enemy\ object\ down\ 32\ pixels\ when\ called\r\n\ \r\n\ @param\ There\ are\ no\ parameters.\r\n\ @return\ Nothing\ is\ returned.\r\n\ \r\n\ This\ method\ is\ private\ instead\ of\ protected\ because\ this\ code\ is\ used\ by\ the\ subclasses\ of\r\n\ the\ Enemy\ class\ directly,\ instead\ of\ being\ called\ from\ within\ the\ subclasses.\r\n
comment7.params=
comment7.target=void\ fire()
comment7.text=\r\n\ fire\ creates\ an\ Enemy_Shot\ object\ if\ both\ there\ isn't\ an\ Enemy_Shot\ in\ the\ world\ already,\r\n\ and\ if\ a\ random\ number\ between\ 0\ and\ 99\ is\ 0.\r\n\ \r\n\ @param\ There\ are\ no\ parameters.\r\n\ @return\ Nothing\ is\ returned.\r\n\ \r\n\ This\ method\ is\ private\ instead\ of\ protected\ because\ this\ code\ is\ used\ by\ the\ subclasses\ of\r\n\ the\ Enemy\ class\ directly,\ instead\ of\ being\ called\ from\ within\ the\ subclasses.\r\n
comment8.params=
comment8.target=int\ getNumEnemies()
comment8.text=\r\n\ getNumEnemies\ is\ a\ getter\ method\ that\ returns\ the\ variable\ numOfEnemies\ when\ called.\r\n\ \r\n\ @param\ There\ are\ no\ parameters.\r\n\ @return\ returns\ the\ numOfEnemies\ variable.\r\n\ \r\n\ \ This\ method\ is\ public\ because\ it\ is\ called\ by\ other\ classes\ to\ transfer\ the\ numOfEnemies\r\n\ variable,\ as\ with\ all\ getter\ methods.\r\n\ \ This\ method\ is\ static\ because\ it\ references\ and\ alters\ a\ static\ variable.\r\n
comment9.params=newNumEnemies
comment9.target=void\ setNumEnemies(int)
comment9.text=\r\n\ setNumEnemies\ is\ a\ setter\ method\ that\ changes\ numOfEnemies\ to\ the\ parameter.\r\n\ \r\n\ @param\ int\ newNumEnemies\ is\ the\ value\ that\ numOfEnemies\ will\ be\ changed\ to.\r\n\ @return\ Nothing\ is\ returned.\r\n\ \r\n\ \ This\ method\ is\ public\ because\ it\ is\ called\ by\ other\ classes\ to\ change\ a\ private\ instance\ variable,\r\n\ as\ with\ all\ setter\ methods.\r\n\ \ \r\n
numComments=10
